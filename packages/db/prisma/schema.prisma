// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String     @id @default(dbgenerated("concat('usr_', replace(cast(gen_random_uuid() as text), '-', ''))")) @db.Text
  name         String
  games        UserGame[]
  createdAt    DateTime   @default(now())
  gamesWon     Game[]     @relation("winner")
  gamesCreated Game[]     @relation("creator")
}

model Game {
  id          String     @id @default(dbgenerated("concat('gam_', replace(cast(gen_random_uuid() as text), '-', ''))")) @db.Text
  status      GameStatus @default(NOT_STARTED)
  winner      User?      @relation("winner", fields: [winnerId], references: [id])
  winnerId    String?    @db.Text
  createdBy   User?      @relation("creator", fields: [createdById], references: [id])
  createdById String?    @db.Text
  code        String
  userGame    UserGame[]
}

model UserGame {
  id     String  @id @default(dbgenerated("concat('grm_', replace(cast(gen_random_uuid() as text), '-', ''))")) @db.Text
  user   User?   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String?
  game   Game    @relation(fields: [gameId], references: [id], onDelete: Cascade)
  gameId String
}

enum GameStatus {
  NOT_STARTED
  STARTED
  ENDED
}
